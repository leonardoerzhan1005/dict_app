# Generated by Django 4.0.8 on 2025-08-01 12:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('registration_source', models.CharField(blank=True, help_text='Источник регистрации (email, google, ... )', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'На проверке'), ('approved', 'Опубликовано'), ('rejected', 'Отклонено')], default='approved', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('meaning', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'На проверке'), ('approved', 'Опубликовано'), ('rejected', 'Отклонено')], default='pending', max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='word_images/')),
                ('file', models.FileField(blank=True, null=True, upload_to='word_files/')),
                ('pronunciation', models.CharField(blank=True, help_text='МФА, транскрипция и т.д.', max_length=100)),
                ('audio', models.FileField(blank=True, help_text='Аудио слова', null=True, upload_to='word_audio/')),
                ('example_audio', models.FileField(blank=True, help_text='Аудио примера', null=True, upload_to='example_audio/')),
                ('difficulty', models.CharField(choices=[('easy', 'Легко'), ('medium', 'Средне'), ('hard', 'Сложно')], default='medium', max_length=10)),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft-delete: не удалять из БД, а скрывать')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='words', to='dictionary.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_words', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.language')),
                ('tags', models.ManyToManyField(blank=True, related_name='words', to='dictionary.tag')),
                ('translations', models.ManyToManyField(related_name='reverse_translations', through='dictionary.Translation', to='dictionary.word')),
            ],
        ),
        migrations.CreateModel(
            name='WordHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='dictionary.word')),
            ],
        ),
        migrations.CreateModel(
            name='WordChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=20)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
                ('change_type', models.CharField(blank=True, help_text='manual, auto, import и т.д.', max_length=20)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to='dictionary.word')),
            ],
        ),
        migrations.AddField(
            model_name='translation',
            name='from_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_translations', to='dictionary.word'),
        ),
        migrations.AddField(
            model_name='translation',
            name='to_word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_translations', to='dictionary.word'),
        ),
        migrations.CreateModel(
            name='TagTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.language')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='dictionary.tag')),
            ],
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_history', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterfaceTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.language')),
            ],
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourited_by', to='dictionary.word')),
            ],
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='dictionary.word')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='dictionary.category')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.language')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='preferred_language',
            field=models.ForeignKey(blank=True, help_text='Язык интерфейса по умолчанию', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='dictionary.language'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='WordLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='dictionary.word')),
            ],
            options={
                'unique_together': {('user', 'word')},
            },
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['word'], name='dictionary__word_cf71b0_idx'),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['language'], name='dictionary__languag_c06d6e_idx'),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['status'], name='dictionary__status_e1b239_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='word',
            unique_together={('word', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='translation',
            unique_together={('from_word', 'to_word')},
        ),
        migrations.AlterUniqueTogether(
            name='tagtranslation',
            unique_together={('tag', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='interfacetranslation',
            unique_together={('language', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='favourite',
            unique_together={('user', 'word')},
        ),
        migrations.AlterUniqueTogether(
            name='categorytranslation',
            unique_together={('category', 'language')},
        ),
    ]
